; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppPublisher "Stewart A. Nutter"
#define MyAppName "TakeoutWranglerUI"
#define MyAppExeName MyAppName + ".exe"
#define MySourceDir "C:\Users\sanut\OneDrive\GitCode\PhotoCopy\TakeoutWranglerUI\bin\Release\net9.0-windows8.0\"
#define MySourceExe MySourceDir + "\" + MyAppExeName

#define MyDecryptAppName "TakeoutWranglerViewer"
#define MyDecryptAppExeName MyDecryptAppName + ".exe"
#define MyDecryptSourceDir "C:\Users\sanut\OneDrive\GitCode\PhotoCopy\DecryptDisplay\bin\Release\net9.0-windows\"
#define MyDecryptSourceExe MyDecryptSourceDir + "\" + MyDecryptAppExeName

#define MyAppVersion GetVersionNumbersString(MySourceExe)	
#define MyIcon "C:\Users\sanut\OneDrive\GitCode\PhotoCopy\Documentation\photos.ico"

; requires netcorecheck.exe and netcorecheck_x64.exe (see CodeDependencies.iss)
#define public Dependency_Path_NetCoreCheck "..\dependencies\"

#include "..\includes\CodeDependencies.iss"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AlwaysShowComponentsList=yes
AppId={{F5A13A0A-4DB0-4A8D-8056-C5A952CD8110}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
ArchitecturesAllowed=x64compatible
ArchitecturesInstallIn64BitMode=x64compatible
ChangesAssociations=yes
Compression=lzma2/ultra64
DefaultGroupName={#MyAppName}
DefaultDirName={autopf}\{#MyAppPublisher}\{#MyAppName}
DisableProgramGroupPage=yes
LicenseFile=C:\Users\sanut\OneDrive\GitCode\PhotoCopy\Documentation\Copyright.txt
PrivilegesRequired=admin
PrivilegesRequiredOverridesAllowed=dialog
OutputBaseFilename={#MyAppName}Setup
SetupIconFile={#MyIcon}
SolidCompression=yes
UninstallDisplayIcon={#MyIcon}
VersionInfoVersion={#MyAppVersion}
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; Components: TakeoutWrangler DecryptDisplay
Name: twlockAssociation; Description: "{cm:AssocFileExtension,{#MyDecryptAppName},twl}"; GroupDescription: File extensions:

[Types]
Name: "full"; Description: "Install TakeoutWranglerUI and TakeoutWranglerViewer"
Name: "onlyTakeoutWrangler"; Description: "Install Only TakeoutWranglerUI"
Name: "onlyDecryptDisplay"; Description: "Install Only TakeoutWranglerViewer"

[Components]
Name: "TakeoutWrangler"; Description: "TakeoutWrangler UI  only"; Types: onlyTakeoutWrangler full
Name: "DecryptDisplay"; Description: "DecryptDisplay for Locked folder"; Types: onlyDecryptDisplay full

[Files]
Source: "{#MySourceDir}\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs; Excludes: "*.wl,*.development.json,*.pdb,appsettings.json,launchSettings.json"; Components: TakeoutWrangler
Source: "{#MyDecryptSourceDir}\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs; Excludes: "*.wl,*.development.json,*.pdb,appsettings.json,launchSettings.json"; Components: DecryptDisplay
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Registry]
Root: HKCR; Subkey: ".twl"; ValueData: "{#MyDecryptAppName}"; Flags: uninsdeletevalue; ValueType: string;  ValueName: ""
Root: HKCR; Subkey: "{#MyDecryptAppName}"; ValueData: "Program {#MyDecryptAppName}";  Flags: uninsdeletekey;   ValueType: string;  ValueName: ""
Root: HKCR; Subkey: "{#MyDecryptAppName}\DefaultIcon"; ValueData: "{app}\{#MyDecryptAppName},0"; ValueType: string;  ValueName: ""
Root: HKCR; Subkey: "{#MyDecryptAppName}\shell\open\command"; ValueData: """{app}\{#MyDecryptAppName}"" ""%1""";  ValueType: string;  ValueName: ""

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent runascurrentuser

[Code]
function PrepareToInstall(var NeedsRestart: Boolean): String;
begin
  Log('app: ' + ExpandConstant('{app}'));

  Result := '';
end;

function InitializeSetup: Boolean;
begin
  // comment/uncomment out functions to disable/enable installing them
  //Dependency_AddDotNet35;
  //Dependency_AddDotNet40;
  //Dependency_AddDotNet45;
  //Dependency_AddDotNet46;
  //Dependency_AddDotNet47;
  //Dependency_AddDotNet48;

#ifdef Dependency_Path_NetCoreCheck
  //Dependency_AddNetCore31;
  //Dependency_AddNetCore31Asp;
  //Dependency_AddNetCore31Desktop;
  //Dependency_AddDotNet50;
  //Dependency_AddDotNet50Asp;
  //Dependency_AddDotNet50Desktop;
  //Dependency_AddDotNet60;
  //Dependency_AddDotNet60Asp;
  //Dependency_AddDotNet60Desktop;
  //Dependency_AddDotNet70;
  //Dependency_AddDotNet70Asp;
  //Dependency_AddDotNet70Desktop;
  //Dependency_AddDotNet80;
  //Dependency_AddDotNet80Asp;
  //Dependency_AddDotNet80Desktop;
  Dependency_AddDotNet90;
  Dependency_AddDotNet90Desktop
#endif

  //Dependency_AddVC2005;
  //Dependency_AddVC2008;
  //Dependency_AddVC2010;
  //Dependency_AddVC2012;
  //Dependency_ForceX86 := True; // force 32-bit install of next dependencies
  //Dependency_AddVC2013;
  //Dependency_ForceX86 := False; // disable forced 32-bit install again
  //Dependency_AddVC2015To2022;

  //Dependency_AddDirectX;

  //Dependency_AddSql2008Express;
  //Dependency_AddSql2012Express;
  //Dependency_AddSql2014Express;
  //Dependency_AddSql2016Express;
  //Dependency_AddSql2017Express;
  //Dependency_AddSql2019Express;
  //Dependency_AddSql2022Express;

  //Dependency_AddWebView2;

  //Dependency_AddAccessDatabaseEngine2010;
  //Dependency_AddAccessDatabaseEngine2016;

  Result := True;
end;
